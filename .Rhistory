mean_number_of_socks[j] <- mean(number_of_socks[[j]])
}
# plot
qplot(number_of_pairs, mean_number_of_socks) +
geom_smooth(se = FALSE) +
labs(title = "The effect of increasing number of pairs",
x = "Number of pairs",
y = "Number of socks until I have a match")
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(rvest)
library(data.table)
#create a function that will create alphanumeric for a word
alphanumeric <- function(word) {
if(!is.character(word)) stop("must be a character")
#put to lower
word <- tolower(word)
#remove space
word <- trimws(word) %>%
gsub(pattern = " ", replacement = "")
total <- sapply(strsplit(word, "")[[1]],
function(letter) grep(pattern = letter,
x = letters,
value = FALSE)) %>%
sum()
return(total)
}
# extract numbers written as words
numbers <- read_html("https://www.englishclub.com/kids/numbers-chart.htm") %>%
html_nodes(".ec-table") %>%
html_table() %>%
.[[1]] %>%
apply(., 1, c) %>%
as.vector() %>%
gsub(pattern = "[0-9]", replacement = "") %>%
gsub(pattern = "-", replacement = "")
#create a function that will create alphanumeric for a word
alphanumeric <- function(word) {
if(!is.character(word)) stop("must be a character")
#put to lower
word <- tolower(word)
#remove space
word <- trimws(word) %>%
gsub(pattern = " ", replacement = "")
total <- sapply(strsplit(word, "")[[1]],
function(letter) grep(pattern = letter,
x = letters,
value = FALSE)) %>%
sum()
return(total)
}
# extract numbers written as words
numbers <- read_html("https://www.englishclub.com/kids/numbers-chart.htm") %>%
html_nodes(".ec-table") %>%
html_table() %>%
.[[1]] %>%
apply(., 1, c) %>%
as.vector() %>%
gsub(pattern = "[0-9]", replacement = "") %>%
gsub(pattern = "-", replacement = "")
#add till 999
hundrets <- paste0(numbers[1:9], "hundred") %>%
sapply(., function(x) paste0(x,c("", numbers[1:99]))) %>%
as.vector()
thousands <- paste0(c(numbers[1:99], hundrets), "thousand") %>%
sapply(., function(x) paste0(x, c("", numbers[1:99], hundrets))) %>%
as.vector()
# # good luck with that it crushed on 8GB or RAM
# millions <- paste0(c(numbers[1:99], hundrets), "million") %>%
#     sapply(., function(x) paste0(x, c("", numbers[1:99], hundrets, thousands))) %>%
#   as.vector()
# create a df and add alphanumeric value of each number
score <- data.table(letter = c(numbers[1:99, hundrets, thousands]))
# create a df and add alphanumeric value of each number
score <- data.table(letter = c(numbers[1:99], hundrets, thousands))
dim(score)
score[ number := 1:nrow(score)]
score[, number := 1:nrow(score)]
score[, alhanumeric := lapply(letter, alphanumeric)]
score
chartr("abc", 123, "a")
chartr("abc", "123", "a")
chartr("abc", "123", "ab")
total <-  chartr(letters, as.character(1:26), word)
word <- "abc"
total <-  chartr(letters, as.character(1:26), word)
total
letters
paste0(letters)
paste0(letters, collapse = TRUE)
paste0(letters, collapse = "")
total <-  chartr(old = paste0(letters, collapse = ""),
new = paste0(as.character(1:26), collapse = ""),
word)
total
total <-  chartr(old = paste0(letters, collapse = ""),
new = paste0(as.character(1:26), collapse = ""),
word) %>%
as.numeric() %>%
sum()
total
total <-  chartr(old = paste0(letters, collapse = ""),
new = paste0(as.character(1:26), collapse = ""),
word) %>%
as.numeric() %>%
strsplit()[[1]] %>%
sum()
total <-  chartr(old = paste0(letters, collapse = ""),
new = paste0(as.character(1:26), collapse = ""),
word) %>%
as.numeric() %>%
strsplit(., "")[[1]] %>%
sum()
total <-  chartr(old = paste0(letters, collapse = ""),
new = paste0(as.character(1:26), collapse = ""),
word) %>%
as.numeric() %>%
strsplit(x = ., split = "")[[1]] %>%
sum()
total <-  chartr(old = paste0(letters, collapse = ""),
new = paste0(as.character(1:26), collapse = ""),
word) %>%
strsplit(x = ., split = "")[[1]] %>%
as.numeric() %>%
sum()
chartr(old = paste0(letters, collapse = ""),
new = paste0(as.character(1:26), collapse = ""),
word) %>%
strsplit(x = ., split = "")
chartr(old = paste0(letters, collapse = ""),
new = paste0(as.character(1:26), collapse = ""),
word) %>%
strsplit(x = ., split = "")[[1]]
total <-  chartr(old = paste0(letters, collapse = ""),
new = paste0(as.character(1:26), collapse = ""),
word) %>%
strsplit(x = ., split = "") %>%
.[[1]] %>%
as.numeric() %>%
sum()
total
#create a function that will create alphanumeric for a word
alphanumeric <- function(word) {
if(!is.character(word)) stop("must be a character")
#put to lower
word <- tolower(word)
#remove space
word <- trimws(word) %>%
gsub(pattern = " ", replacement = "")
total <-  chartr(old = paste0(letters, collapse = ""),
new = paste0(as.character(1:26), collapse = ""),
word) %>%
strsplit(x = ., split = "") %>%
.[[1]] %>%
as.numeric() %>%
sum()
# total <- sapply(strsplit(word, "")[[1]],
#                 function(letter) grep(pattern = letter,
#                                       x = letters,
#                                       value = FALSE)) %>%
#   sum()
return(total)
}
#create a function that will create alphanumeric for a word
alphanumeric <- function(word) {
if(!is.character(word)) stop("must be a character")
#put to lower
word <- tolower(word)
#remove space
word <- trimws(word) %>%
gsub(pattern = " ", replacement = "")
total <-  chartr(old = paste0(letters, collapse = ""),
new = paste0(as.character(1:26), collapse = ""),
word) %>%
strsplit(x = ., split = "") %>%
.[[1]] %>%
as.numeric() %>%
sum()
# total <- sapply(strsplit(word, "")[[1]],
#                 function(letter) grep(pattern = letter,
#                                       x = letters,
#                                       value = FALSE)) %>%
#   sum()
return(total)
}
#create a function that will create alphanumeric for a word
alphanumeric2 <- function(word) {
if(!is.character(word)) stop("must be a character")
#put to lower
word <- tolower(word)
#remove space
word <- trimws(word) %>%
gsub(pattern = " ", replacement = "")
total <- sapply(strsplit(word, "")[[1]],
function(letter) grep(pattern = letter,
x = letters,
value = FALSE)) %>%
sum()
return(total)
}
microbenchmark::microbenchmark(alphanumeric("abc"), alphanumeric2("abc"), times = 1000)
#create a function that will create alphanumeric for a word
alphanumeric <- function(word) {
if(!is.character(word)) stop("must be a character")
#put to lower
word <- tolower(word)
#remove space
word <- trimws(word) %>%
gsub(pattern = " ", replacement = "")
total <- sapply(strsplit(word, "")[[1]],
function(letter) grep(pattern = letter,
x = letters,
value = FALSE)) %>%
sum()
return(total)
}
# extract numbers written as words
numbers <- read_html("https://www.englishclub.com/kids/numbers-chart.htm") %>%
html_nodes(".ec-table") %>%
html_table() %>%
.[[1]] %>%
apply(., 1, c) %>%
as.vector() %>%
gsub(pattern = "[0-9]", replacement = "") %>%
gsub(pattern = "-", replacement = "")
#add till 999
hundrets <- paste0(numbers[1:9], "hundred") %>%
sapply(., function(x) paste0(x,c("", numbers[1:99]))) %>%
as.vector()
thousands <- paste0(c(numbers[1:99], hundrets), "thousand") %>%
sapply(., function(x) paste0(x, c("", numbers[1:99], hundrets))) %>%
as.vector()
# # good luck with that it crushed on 8GB or RAM
# millions <- paste0(c(numbers[1:99], hundrets), "million") %>%
#     sapply(., function(x) paste0(x, c("", numbers[1:99], hundrets, thousands))) %>%
#   as.vector()
# create a df and add alphanumeric value of each number
score <- data.table(letter = c(numbers[1:99], hundrets, thousands))
score[, number := 1:nrow(score)]
score[, alhanumeric := lapply(letter, alphanumeric)]
# create a df and add alphanumeric value of each number
score <- data.table(letter = c(numbers[1:99], hundrets))
score[, number := 1:nrow(score)]
score[, alhanumeric := lapply(letter, alphanumeric)]
#plot
with(score, plot(alphanumeric, number,
pch = 19,
ylim = c(0, max(alphanumeric))))
score
str(score)
score$alhanumeric
# create a df and add alphanumeric value of each number
score <- data.table(letter = c(numbers[1:99], hundrets))
score[, number := 1:nrow(score)]
score[, alhanumeric := sapply(letter, alphanumeric)]
#plot
with(score, plot(alphanumeric, number,
pch = 19,
ylim = c(0, max(alphanumeric))))
str(score)
#plot
with(score, plot(alphanumeric, number,
pch = 19,
ylim = c(0, max(alphanumeric))))
# create a df and add alphanumeric value of each number
score <- data.table(letter = c(numbers[1:99], hundrets))
score[, number := 1:nrow(score)]
score[, alphanumeric := sapply(letter, alphanumeric)]
#plot
with(score, plot(alphanumeric, number,
pch = 19,
ylim = c(0, max(alphanumeric))))
#plot
with(score, plot(alphanumeric, number,
pch = 19,
ylim = c(0, max(alphanumeric))))
abline(a = 0, b = 1)
text(score$alphanumeric, score$number,
labels = ifelse(score$number < score$alphanumeric, score$number, ""),
cex = .7)
dim(score)
#plot
with(score, plot(alphanumeric, number,
pch = 19,
xlim = c(0, max(alphanumeric))))
abline(a = 0, b = 1)
text(score$alphanumeric, score$number,
labels = ifelse(score$number < score$alphanumeric, score$number, ""),
cex = .7)
#plot
with(score, plot(number, alphanumeric,
pch = 19,
xlim = c(0, max(alphanumeric))))
abline(a = 0, b = 1)
text(score$number, score$alphanumeric,
labels = ifelse(score$number < score$alphanumeric, score$number, ""),
cex = .7)
#plot
with(score, plot(number, alphanumeric,
pch = 19,
ylim = c(0, max(alphanumeric))))
abline(a = 0, b = 1)
text(score$number, score$alphanumeric,
labels = ifelse(score$number < score$alphanumeric, score$number, ""),
cex = .7)
score[number < alphanumeric, ]
setkeyv(score[number < alphanumeric, ], number)
setkeyv(score[number < alphanumeric, ], "number")
score[number < alphanumeric, ]
alphanumeric("twohundredseventynine")
score[number < alphanumeric & order(number), ]
score[number < alphanumeric & order(number, decreasing = FALSE), ]
score <- data.table(letter = c(numbers[1:99], hundrets, thousands))
score[, number := 1:nrow(score)]
dim(score)
alphanumeric("nine hundred ninety nine million nine hundred ninety nine")
# create a df and add alphanumeric value of each number
score <- data.table(letter = c(numbers[1:99], hundrets, thousands))
score[, number := 1:nrow(score)]
score[, alphanumeric := sapply(letter, alphanumeric)]
library(parallel)
# Calculate the number of cores
no_cores <- detectCores() - 1
# Initiate cluster
cl <- makeCluster(no_cores)
total <- parSapply(strsplit(word, "")[[1]],
function(letter) grep(pattern = letter,
x = letters,
value = FALSE)) %>%
sum()
total <- parSapply(cl, strsplit(word, "")[[1]],
function(letter) grep(pattern = letter,
x = letters,
value = FALSE)) %>%
sum()
total
alphanumeric <- function(word) {
if(!is.character(word)) stop("must be a character")
#put to lower
word <- tolower(word)
#remove space
word <- trimws(word) %>%
gsub(pattern = " ", replacement = "")
# Calculate the number of cores
no_cores <- detectCores() - 1
# Initiate cluster
cl <- makeCluster(no_cores)
total <- parSapply(cl, strsplit(word, "")[[1]],
function(letter) grep(pattern = letter,
x = letters,
value = FALSE)) %>%
sum()
return(total)
}
# create a df and add alphanumeric value of each number
score <- data.table(letter = c(numbers[1:99], hundrets, thousands))
score[, number := 1:nrow(score)]
score[, alphanumeric := sapply(letter, alphanumeric)]
#create a function that will create alphanumeric for a word
alphanumeric <- function(word) {
if(!is.character(word)) stop("must be a character")
#put to lower
word <- tolower(word)
#remove space
word <- trimws(word) %>%
gsub(pattern = " ", replacement = "")
total <- sapply(strsplit(word, "")[[1]],
function(letter) grep(pattern = letter,
x = letters,
value = FALSE)) %>%
sum()
return(total)
}
# Calculate the number of cores
no_cores <- detectCores() - 1
# Initiate cluster
cl <- makeCluster(no_cores)
score$alphanumeric <- parSapply(cl, score$letter, alphanumeric)
# Calculate the number of cores
no_cores <- detectCores() - 1
# Initiate cluster
cl <- makeCluster(no_cores)
alphanumeric_vec <- parSapply(cl, score$letter, alphanumeric)
?parSapply
?getDTthreads
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(rvest)
library(data.table)
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(rvest)
library(data.table)
setDTthreads(3)
# create a df and add alphanumeric value of each number
score <- data.table(letter = c(numbers[1:99], hundrets, thousands))
score[, number := 1:nrow(score)]
score[, alphanumeric := sapply(letter, alphanumeric)]
knitr::opts_chunk$set(echo = TRUE)
library(magrittr)
library(rvest)
library(data.table)
setDTthreads(3)
#create a function that will create alphanumeric for a word
alphanumeric <- function(word) {
if(!is.character(word)) stop("must be a character")
#put to lower
word <- tolower(word)
#remove space
word <- trimws(word) %>%
gsub(pattern = " ", replacement = "")
total <- sapply(strsplit(word, "")[[1]],
function(letter) grep(pattern = letter,
x = letters,
value = FALSE)) %>%
sum()
return(total)
}
# extract numbers written as words
numbers <- read_html("https://www.englishclub.com/kids/numbers-chart.htm") %>%
html_nodes(".ec-table") %>%
html_table() %>%
.[[1]] %>%
apply(., 1, c) %>%
as.vector() %>%
gsub(pattern = "[0-9]", replacement = "") %>%
gsub(pattern = "-", replacement = "")
#add till 999
hundrets <- paste0(numbers[1:9], "hundred") %>%
sapply(., function(x) paste0(x,c("", numbers[1:99]))) %>%
as.vector()
thousands <- paste0(c(numbers[1:99], hundrets), "thousand") %>%
sapply(., function(x) paste0(x, c("", numbers[1:99], hundrets))) %>%
as.vector()
# # good luck with that it crushed on 8GB or RAM
# millions <- paste0(c(numbers[1:99], hundrets), "million") %>%
#     sapply(., function(x) paste0(x, c("", numbers[1:99], hundrets, thousands))) %>%
#   as.vector()
# create a df and add alphanumeric value of each number
score <- data.table(letter = c(numbers[1:99], hundrets, thousands))
score[, number := 1:nrow(score)]
score[, alphanumeric := sapply(letter, alphanumeric)]
library(parallel)
#create a function that will create alphanumeric for a word
alphanumeric <- function(word) {
if(!is.character(word)) stop("must be a character")
#put to lower
word <- tolower(word)
#remove space
word <- trimws(word) %>%
gsub(pattern = " ", replacement = "")
total <- sapply(strsplit(word, "")[[1]],
function(letter) grep(pattern = letter,
x = letters,
value = FALSE))
total <- sum(total)
return(total)
}
#create a function that will create alphanumeric for a word
alphanumeric <- function(word) {
if(!is.character(word)) stop("must be a character")
#put to lower
word <- tolower(word)
#remove space
word <- trimws(word)
word <- gsub(pattern = " ", replacement = "", x = word)
total <- sapply(strsplit(word, "")[[1]],
function(letter) grep(pattern = letter,
x = letters,
value = FALSE))
total <- sum(total)
return(total)
}
library(parallel)
cl <- makeCluster(3)
score$alphanumeric <- parSapply(cl, score$letter, alphanumeric)
score
#plot
with(score, plot(number, alphanumeric,
pch = 19,
ylim = c(0, max(alphanumeric))))
abline(a = 0, b = 1)
text(score$number, score$alphanumeric,
labels = ifelse(score$number < score$alphanumeric, score$number, ""),
cex = .7)
summary(score)
tail(score[number < alphanumeric & order(number, decreasing = FALSE), ], 1)
#plot
with(score, plot(number, alphanumeric,
pch = 19,
ylim = c(0, max(alphanumeric)), main = "Relationship between Alphanumeric and its Number")
)
abline(a = 0, b = 1)
text(score$number, score$alphanumeric,
labels = ifelse(score$number < score$alphanumeric, score$number, ""),
cex = .7)
#plot
with(score, plot(number, alphanumeric,
pch = 19,
ylim = c(0, max(alphanumeric)), main = "Relationship between Alphanumeric and its Number",
col = ifelse(score$number < score$alphanumeric,
"red",
col2rgb("black", alpha = 0.1)))
)
plot
with(score, plot(number, alphanumeric,
pch = 19,
ylim = c(0, max(alphanumeric)), main = "Relationship between Alphanumeric and its Number",
col = ifelse(score$number < score$alphanumeric,
"coral1",
scales::alpha("black", alpha = 0.1)))
)
